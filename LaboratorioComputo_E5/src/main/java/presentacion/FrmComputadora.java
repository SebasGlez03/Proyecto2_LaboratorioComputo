/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package presentacion;

import java.awt.BorderLayout;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import javax.swing.JOptionPane;
import negocio.DTO.ApartadoDTO;
import negocio.DTO.ComputadoraDTO;
import negocio.DTO.EstudianteDTO;
import negocio.logica.ApartadoNegocio;
import negocio.logica.ComputadoraNegocio;
import negocio.logica.EstudianteNegocio;
import utilerias.CaesarCipher;
import utilerias.LectorIp;

/**
 * La clase {@code FrmComputadora} representa la interfaz gráfica para la
 * gestión de computadoras.
 * <p>
 * Esta clase extiende {@link javax.swing.JFrame} y proporciona funcionalidades
 * para interactuar con las computadoras del sistema, incluyendo la verificación
 * de IP y el desbloqueo.
 * </p>
 *
 * @author PC
 */
public class FrmComputadora extends javax.swing.JFrame {

    /**
     * Creates new form FrmComputadora
     */
    CaesarCipher encriptar = new CaesarCipher();
    EstudianteNegocio estudianteNegocio = new EstudianteNegocio();
    ApartadoNegocio apartadoNegocio = new ApartadoNegocio();
    ComputadoraNegocio computadoraNegocio = new ComputadoraNegocio();
    ComputadoraDTO computadoraUsuario = new ComputadoraDTO();
    LectorIp lector = new LectorIp();

    /**
     * Crea una nueva instancia de {@code FrmComputadora}.
     *
     * @param computadoraUsuario El objeto {@link ComputadoraDTO} que representa
     * la computadora del usuario.
     */
    public FrmComputadora(ComputadoraDTO computadoraUsuario) {
        initComponents();
        this.computadoraUsuario = computadoraUsuario;
        txtNumComputadora.setText("#" + computadoraUsuario.getNumComputadora());
        buscarComputadoraPorIP();

    }

    /**
     * Busca la computadora por su dirección IP y actualiza la información en la interfaz.
     */
    public void buscarComputadoraPorIP() {

        String ip;
        ip = lector.getLocalIPAddress();
        System.out.println(ip);
        if (computadoraNegocio.buscarComputadorasPorIP(ip).isEmpty()) {

            JOptionPane.showMessageDialog(this, "Esta computadora no es parte del sistema");
            this.dispose();

        } else {

            this.computadoraUsuario = computadoraNegocio.buscarComputadorasPorIP(ip).getFirst();
            txtNumComputadora.setText("#" + computadoraUsuario.getNumComputadora());

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtNumComputadora = new javax.swing.JLabel();
        txtContrasenia = new javax.swing.JTextField();
        txtId = new javax.swing.JTextField();
        btnDesbloquear = new javax.swing.JLabel();
        lblImagen = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtNumComputadora.setBackground(new java.awt.Color(187, 187, 187));
        txtNumComputadora.setFont(new java.awt.Font("Arial", 1, 128)); // NOI18N
        txtNumComputadora.setForeground(new java.awt.Color(153, 153, 153));
        txtNumComputadora.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtNumComputadora.setText("NO");
        getContentPane().add(txtNumComputadora, new org.netbeans.lib.awtextra.AbsoluteConstraints(704, 40, 290, 155));

        txtContrasenia.setBackground(new java.awt.Color(114, 114, 114));
        txtContrasenia.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtContrasenia.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(txtContrasenia, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 630, 260, 40));

        txtId.setBackground(new java.awt.Color(114, 114, 114));
        txtId.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtId.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(txtId, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 540, 260, 40));

        btnDesbloquear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/btnDesbloquear.png"))); // NOI18N
        btnDesbloquear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDesbloquear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDesbloquearMouseClicked(evt);
            }
        });
        getContentPane().add(btnDesbloquear, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 690, 157, 41));

        lblImagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/background_Computadora.png"))); // NOI18N
        getContentPane().add(lblImagen, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 750));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Evento que se ejecuta al hacer clic en el botón de desbloqueo.
     * 
     * @param evt El evento de clic del ratón.
     */
    private void btnDesbloquearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDesbloquearMouseClicked
        System.out.println("boton aceptar click!");

        EstudianteDTO eD = new EstudianteDTO();
        if (txtId.getText().matches(".*\\D+.*") || txtId.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Un ID no puede contener letras, caracteres especiales o estar vacío");
        } else {

            Long id = Long.decode(txtId.getText());
            eD.setId(Long.decode(txtId.getText()));
            eD.setContrasenia(txtContrasenia.getText());
            EstudianteDTO estudiante = estudianteNegocio.buscarEstudiante(id);

            System.out.println("a");

            if (estudiante != null) {

                System.out.println("a");
                if (encriptar.decrypt(estudiante.getContrasenia(), 3).equals(eD.getContrasenia())) {
                    List<ApartadoDTO> apartados = new ArrayList<>();
                    apartados = apartadoNegocio.buscarApartadosPorEstudiante(estudiante.getId(), computadoraUsuario.getId());
                    if (apartados.isEmpty()) {

                        JOptionPane.showMessageDialog(this, "Este usuario no tiene apartados");

                    } else {

                        Calendar currentTime = Calendar.getInstance();
                        if (currentTime.after(apartados.get(0).getFechaFin())) {

                            JOptionPane.showMessageDialog(this, "Se ha acabado tu apartado");

                        }
                        if (currentTime.before(apartados.get(0).getFechaInicio())) {

                            JOptionPane.showMessageDialog(this, "No ha iniciado tu apartado");

                        } else {
                            this.dispose();
                        }

                    }

                } else {

                    JOptionPane.showMessageDialog(this, "Contraseña incorrecta");

                }
            } else {

                JOptionPane.showMessageDialog(this, "No existe un estudiante con ese ID o contraseña");

            }
        }
    }//GEN-LAST:event_btnDesbloquearMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnDesbloquear;
    private javax.swing.JLabel lblImagen;
    private javax.swing.JTextField txtContrasenia;
    private javax.swing.JTextField txtId;
    private javax.swing.JLabel txtNumComputadora;
    // End of variables declaration//GEN-END:variables
}
